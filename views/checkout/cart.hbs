<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Your Cart</title>
    <link rel="stylesheet" href="/path/to/your/css/styles.css">
    <link rel="stylesheet" href="/stylesheets/footer.css">
    <style>
        /* Custom styles */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
        }

        h1 {
            text-align: center;
        }

        /* Cart container styles */
        .cart-container {
            display: flex;
            flex-wrap: wrap; /* Cho phép các phần tử con xuống dòng khi không đủ chỗ */
            justify-content: center; /* Căn giữa các phần tử con */
            gap: 30px; /* Khoảng cách giữa các phần tử */
            margin: 70px 0;
            margin-top:-30px;

        }
       
        /* Cart item card styles */
        .cart-item-card {
            display: flex;
            border: 2px dashed #000000;
            border-radius: 20px;
            padding: 40px;
            width: 500px;
            padding-right:150px;
        }

        /* Image container styles */
        .cart-item-card .image-container {
            flex: 0 0 30%; /* Chiếm 30% chiều rộng */
        }
        /* Image styling */
        .cart-item-card img {

            max-width: 100%;
            height: 200px;
            border-radius: 5px;
        }
        .cart-item-card .content-container {
            flex: 1; /* Chiếm phần còn lại của chiều rộng */
            margin-left: 30px; /* Khoảng cách giữa ảnh và nội dung */
        }

        .cart-item-card .content-container .price,
        .cart-item-card .content-container .total {
            font-size: 14px;
        }

        /* Quantity input */
        .cart-item-card .content-container .quantity-input {
            width: 50px;
            text-align: center;
            margin-bottom: 10px;
        }

        /* Remove button */
        .cart-item-card .content-container .remove-btn {
            background-color: #ff6347;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 5px;
            cursor: pointer;
            float: right;
            margin-bottom: 10px;
            margin-right: 10px;
        }

        .remove-btn:hover {
            background-color: #ff4500;
        }
        .cart-item-card .content-container .remove-btn:hover {
            background-color: #ff4500;
        }
        
        /* Grand total and checkout button styles */
        .checkout-section {
            display: flex;
            flex-direction: column; /* Hiển thị các phần tử theo chiều dọc */
            justify-content: center; /* Căn giữa theo chiều ngang */
            align-items: center; /* Căn giữa theo chiều dọc */
            text-align: center;
            margin-top: -60px;
        }

        .checkout-section #grand-total {
            font-size: 24px;
            font-weight: bold;
        }

        #checkout-button {
            background-color: #4caf50; /* Green */
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 5px;
            cursor: pointer;
            display: none; /* Start hidden */
        }

        #checkout-button:hover {
            background-color: #45a049;
        }
        .back-button {
            background-color: #2f9c23;
            color: white;
            padding: 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            text-align: center;
            text-decoration: none;
            display: block;
            float: right;
            width: 100%;
            margin-bottom: 20px;
           
        }
         .back-button{
            margin-top: -40px;
            width: 10%;
            background-color: #9db013;
        }

        .add-to-cart-btn:hover, .back-button:hover {
            background-color: #0fb300;
        }
        .back-button:hover {
            background-color: #2f5cf0;
        }


        .remove-btn {
 width: 165px;
 height: 50px;
 cursor: pointer;
 display: flex;
 align-items: center;
 background: red;
 border: none;
 border-radius: 5px;
 box-shadow: 1px 1px 3px rgba(0,0,0,0.15);
 background: #e62222;
 margin-left:380px;
}

.remove-btn, .remove-btn span {
 transition: 200ms;
}

.remove-btn .text {
 transform: translateX(35px);
 color: white;
 font-weight: bold;
}

.remove-btn .icon {
 position: absolute;
 border-left: 1px solid #c41b1b;
 transform: translateX(110px);
 height: 40px;
 width: 40px;
 display: flex;
 align-items: center;
 justify-content: center;
}

.remove-btn svg {
 width: 15px;
 fill: #eee;
}

.remove-btn:hover {
 background: #ff3636;
}

.remove-btn:hover .text {
 color: transparent;
}

.remove-btn:hover .icon {
 width: 150px;
 border-left: none;
 transform: translateX(0);
}

.remove-btn:focus {
 outline: none;
}

.remove-btn:active .icon svg {
 transform: scale(0.8);
}

#checkout-button{
 background-color: transparent;
 color:black;
 border: 2px dashed black;
 margin-left: 660px;
}
button {
  padding: 10px 20px;
  text-transform: uppercase;
  border-radius: 8px;
  font-size: 17px;
  font-weight: bold;
  color: #ffffff80;
  text-shadow: none;
  background: transparent;
  cursor: pointer;
  box-shadow: transparent;
  border: 1px solid #ffffff80;
  transition: 0.5s ease;
  user-select: none;

}

#checkout-button:hover,
:focus {
  color: #ffffff;
  background: #008cff;
  border: 1px solid #008cff;
  text-shadow: 0 0 5px #ffffff, 0 0 10px #ffffff, 0 0 20px #ffffff;
  box-shadow: 0 0 5px #008cff, 0 0 20px #008cff, 0 0 50px #008cff,
    0 0 100px #008cff;
}

button {
  cursor: pointer;
  font-weight: 700;
  font-family: Helvetica,"sans-serif";
  transition: all .2s;
  padding: 10px 20px;
  border-radius: 100px;
  background: #cfef00;
  border: 1px solid transparent;
  display: flex;
  align-items: center;
  font-size: 15px;
  margin-left:240px;
  color:black;
}

button:hover {
  background: #c4e201;
}

button > svg {
  width: 34px;
  margin-left: 10px;
  transition: transform .3s ease-in-out;
}

button:hover svg {
  transform: translateX(5px);
}

button:active {
  transform: scale(0.95);
}



.remove-btn {
    position: absolute;
  width: 60px;
  height: 60px;
  border-radius: 50%;
  background-color: #ff0000 !important;
  border: 2px dashed black !important;
  font-weight: 600;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.164);
  cursor: pointer;
  transition-duration: .3s;
  overflow: hidden;
  

}

.svgIcon {
  width: 30px;
  transition-duration: .3s;
  margin-left:-2px;
}

.svgIcon path {
  fill: rgb(0, 0, 0);
}

.remove-btn:hover {
  width: 140px;
  border-radius: 50px;
  transition-duration: .3s;
  background-color: rgb(255, 69, 69);
  align-items: center;
}

.remove-btn:hover .svgIcon {
  width: 50px;
  transition-duration: .3s;
  transform: translateY(60%);
}

.remove-btn::before {
  position: absolute;
  top: -20px;
  content: "Delete";
  color: white;
  transition-duration: .3s;
  font-size: 2px;
}

.remove-btn:hover::before {
  font-size: 13px;
  opacity: 1;
  transform: translateY(30px);
  transition-duration: .3s;
}


    </style>
</head>

<body>
    {{!-- <h1>Your Cart</h1> --}}
    {{!-- <a href="/products" class="back-button" style="position: absolute;margin-top: 20px;">Back to Products</a> --}}
    <h1>Giỏ Hàng Của Bạn</h1>

    <div class="cart-container">
    <ol>
        {{#each cart}}
            <div style="margin-top:10px;" class="cart-item-card" data-item-id="{{id}}">
                 <div class="image-container">
                    <img src="{{image}}" alt="{{name}}">
                </div>
                 <div class="content-container">
                    <div style="font-weight: bold;font-size: 23px; ">{{name}}</div>
                    <div class="price" style="margin: 10px 0 10px;">Giá: {{price}}</div>
                    <div>
                        Số lượng: 
                        <input type="number" min="1" value="{{quantity}}" class="quantity-input" data-item-id="{{id}}">
                    </div>
                    <div class="total" style="margin: 0 0 10px;">${{totalPrice}}
                    </div>
                    {{!-- <button class="remove-btn" data-item-id="{{id}}">Remove</button> --}}
                    
                    <button style="margin-left:-5px;" class="remove-btn" data-item-id="{{id}}">
                    <svg viewBox="0 0 448 512" class="svgIcon"><path d="M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z"></path></svg>
                    </button>

                 </div>
            </div>

        {{/each}}
    </ol>
</div>

    <div class="checkout-section">
        <div id="grand-total">Grand Total: ${{grandTotal}}</div>
        <button id="checkout-button" style="margin-top: 20px;margin-left:-10px;">Checkout</button>
    </div>


        {{!-- <div style="font-weight: bold;margin-top:200px;position:absolute;margin-left:250px;" id="grand-total">Grand Total: ${{grandTotal}}</div> --}}
        <button id="checkout-button">Checkout</button>
    </div>

    <a style=" outline: none;text-decoration: none;" href="/products">
<button>
    <span>Back to Products</span>
    <svg width="34" height="34" viewBox="0 0 74 74" fill="none" xmlns="http://www.w3.org/2000/svg">
        <circle cx="37" cy="37" r="35.5" stroke="black" stroke-width="3"></circle>
        <path d="M25 35.5C24.1716 35.5 23.5 36.1716 23.5 37C23.5 37.8284 24.1716 38.5 25 38.5V35.5ZM49.0607 38.0607C49.6464 37.4749 49.6464 36.5251 49.0607 35.9393L39.5147 26.3934C38.9289 25.8076 37.9792 25.8076 37.3934 26.3934C36.8076 26.9792 36.8076 27.9289 37.3934 28.5147L45.8787 37L37.3934 45.4853C36.8076 46.0711 36.8076 47.0208 37.3934 47.6066C37.9792 48.1924 38.9289 48.1924 39.5147 47.6066L49.0607 38.0607ZM25 38.5L48 38.5V35.5L25 35.5V38.5Z" fill="black"></path>
    </svg>
</button>
</a>

    <script>
        

        document.addEventListener('DOMContentLoaded', function() {
            // Calculate total for each cart item
            function calculateItemTotalPrice() {
                document.querySelectorAll('.quantity-input').forEach(function(input) {
                    const price = parseFloat(input.dataset.price);
                    const quantity = parseInt(input.value);
                    const totalPrice = price * quantity;
                    const itemCard = input.closest('.cart-item-card');
                    const formatter = new Intl.NumberFormat('vi-VN', {
                        style: 'currency',
                        currency: 'VND'
                    });
                    itemCard.querySelector('.total').textContent = formatter.format(totalPrice);
                });
            }


            // Update totals and grand total
            function updateTotals() {
                $.ajax({
                    url: '/cart/get-totals',
                    method: 'GET',
                    success: function(response) {
                        response.items.forEach(item => {
                            const itemCard = document.querySelector(`.cart-item-card[data-item-id='${item.id}']`);
                            const formatter = new Intl.NumberFormat('vi-VN', {
                                style: 'currency',
                                currency: 'VND'
                            });
                            itemCard.querySelector('.total').textContent = formatter.format(item.totalPrice);
                        });
                        const formatter = new Intl.NumberFormat('vi-VN', {
                            style: 'currency',
                            currency: 'VND'
                        });
                        document.getElementById('grand-total').textContent = `Grand Total: ${formatter.format(response.grandTotal)}`;
                        // Hide the checkout button if the cart is empty
                        const checkoutButton = document.getElementById('checkout-button');
                        if (response.grandTotal <= 0) {
                            checkoutButton.style.display = 'none';
                        } else {
                            checkoutButton.style.display = 'block';
                        }
                    },
                    error: function(error) {
                        console.error('Error fetching totals:', error);
                    }
                });
            }


            // Event listener for quantity input change
            document.querySelectorAll('.quantity-input').forEach(input => {
                input.addEventListener('change', function() {
                    const itemId = input.dataset.itemId;
                    const newQuantity = input.value;
                    $.ajax({
                        url: '/cart/update',
                        method: 'POST',
                        data: {
                            itemId: itemId,
                            quantity: newQuantity
                        },
                        success: function(response) {
                            calculateItemTotalPrice();
                            updateTotals();
                        },
                        error: function(error) {
                            console.error('Error updating cart:', error);
                        }
                    });
                });
            });

            // Event listener for remove button click
            document.querySelectorAll('.remove-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const itemId = button.dataset.itemId;
                    $.ajax({
                        url: '/cart/remove',
                        method: 'POST',
                        data: {
                            itemId: itemId
                        },
                        success: function(response) {
                            location.reload();
                        },
                        error: function(error) {
                            console.error('Error removing item from cart:', error);
                        }
                    });
                });
            });

            // Event listener for checkout button click
            document.getElementById('checkout-button').addEventListener('click', function() {
                window.location.href = '/order';
            });

            // Initial calculations and totals update
            calculateItemTotalPrice();
            updateTotals();
        });
        document.addEventListener("DOMContentLoaded", function() {
            const productPrices = document.querySelectorAll(".price");
            productPrices.forEach(function(element) {
                const price = parseInt(element.textContent);
                const formatter = new Intl.NumberFormat('vi-VN', {
                    style: 'currency',
                    currency: 'VND'
                });
                element.textContent = formatter.format(price);
            });
        });
    </script>
</body>
</html>
